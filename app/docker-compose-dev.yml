version: '3.7'

services:

    client:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        ports:
            - "3000:3000"
        networks:
            - frontend

    mongodb:
        image: mongo
        container_name: mongo
        restart: unless-stopped
        command: mongod --auth
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_API_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_API_PASSWORD}
            MONGO_INITDB_DATABASE: webapp
            MONGODB_DATA_DIR: /data/db
        volumes:
        - mongodbdata:/data/db
        networks:
        - backend

    api:
        build: 
            context: ./backend
            dockerfile: Dockerfile
        command: gunicorn --bind 0.0.0.0:5000 app:app
        ports:
            - "5000:5000"
        environment:
            MONGODB_HOST: mongodb
            MONGODB_USERNAME: ${MONGO_API_USERNAME}
            MONGODB_PASSWORD: ${MONGO_API_PASSWORD}
        volumes:
            - appdata:/var/www/
        depends_on: 
            - mongodb
        networks:
            - frontend
            - backend

    cache:
        image: redis:7-alpine
        restart: always
        ports:
            - "6379:6379"
        command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
        volumes:
            - cache:/data
        networks:
            - backend

networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge
volumes:
    mongodbdata:
        driver: local
    appdata:
        driver: local
    cache:
        driver: local